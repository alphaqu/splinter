name: Rust Linux

on:
 push:
    branches: [ "master" ]
 pull_request:
    branches: [ "master" ]
    
env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: splinter.exe
            name: splinter-Windows-x86_64.zip
            command: both

          - release_for: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: splinter
            name: splinter-Linux-x86_64.tar.gz
            command: both
            
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: splinter
            name: splinter-Darwin-x86_64.tar.gz
            command: both
            
          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: splinter
            name: splinter-Darwin-aarch64.tar.gz
            command: both
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Install gdk-3
        run: sudo apt-get install -y libgtk-3-dev
        if:  matrix.platform.os == 'ubuntu-20.04'
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
        if: |
          matrix.toolchain == 'stable' &&
          ( startsWith( github.ref, 'refs/tags/v' ) ||
            github.ref == 'refs/tags/test-release' )
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: splinter-${{ matrix.platform.os_name }}
          path: "splinter-*"
        if: matrix.toolchain == 'stable' && github.ref == 'refs/tags/test-release'
      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }}
        if: |
          matrix.toolchain == 'stable' &&
          matrix.platform.os == 'macOS-latest' &&
          ( startsWith( github.ref, 'refs/tags/v' ) ||
            github.ref == 'refs/tags/test-release' )
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "splinter-*"
          body_path: Changes.md
        if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )
